<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.netty</groupId>
    <artifactId>netty-parent</artifactId>
    <version>5.0.0.Alpha2</version>
  </parent>
  <artifactId>server</artifactId>
	<name>greenMile</name>
	<properties>
		<quickbuild>true</quickbuild>
		<generatedSourceDir>${project.build.directory}/src</generatedSourceDir>
		<dependencyVersionsDir>${project.build.directory}/versions</dependencyVersionsDir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.6</java.version>
		<spring.version>3.2.2.RELEASE</spring.version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<mybatis-spring.version>1.2.1</mybatis-spring.version>
		<mybatis.version>3.2.3</mybatis.version>
		<commons-dbcp-version>1.2.2</commons-dbcp-version>
		<ibatis-sqlmap-version>2.3.4.726</ibatis-sqlmap-version>
		<oracle-jdbc-version>11.2.0.3</oracle-jdbc-version>
		<hamcrest-core-version>1.3</hamcrest-core-version>
		<mvn.main.class>my.netty.estudiar.server.Launcher</mvn.main.class>
	</properties>
	<repositories>
		<!-- Repository for ORACLE ojdbc6. -->
		<repository>
			<id>codelds</id>
			<url>https://code.lds.org/nexus/content/groups/main-repo</url>
		</repository>
		<!-- repository> <id>libs-milestone</id> <name>libs-milestone</name> <url>http://repo.springsource.org/libs-milestone</url> 
			</repository -->
	</repositories>
	<dependencies>
		<!-- ORACLE -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>${oracle-jdbc-version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- MyBatis integration -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ibatis</groupId>
			<artifactId>ibatis-sqlmap</artifactId>
			<version>${ibatis-sqlmap-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- Netty -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-all</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-transport</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-handler</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-buffer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-codec-http</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-codec-socks</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>netty-codec-http2</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.npn</groupId>
			<artifactId>npn-api</artifactId>
		</dependency>

		<!-- Mix -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jzlib</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.mahout.commons</groupId>
			<artifactId>commons-cli</artifactId>
			<version>2.0-mahout</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest-core-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>clean-first</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!-- Populate the properties whose key is groupId:artifactId:type and 
						whose value is the path to the artifact -->
					<execution>
						<id>locate-dependencies</id>
						<phase>initialize</phase>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>

					<!-- Unpack all source files -->
					<execution>
						<id>unpack-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<classifier>sources</classifier>
							<includes>io/netty/**</includes>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<outputDirectory>${generatedSourceDir}</outputDirectory>
						</configuration>
					</execution>

					<!-- Unpack all class files -->
					<execution>
						<id>unpack-jars</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludes>io/netty/example/**,META-INF/native/libnetty-tcnative*</excludes>
							<includes>io/netty/**,META-INF/native/**</includes>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<!-- Instead of generating a new version property file, merge others' 
						version property files into one. -->
					<execution>
						<id>write-version-properties</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>merge-version-properties</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef resource="net/sf/antcontrib/antlib.xml" />
								<propertyselector property="versions"
									match="^(${project.groupId}:(?!netty-example)[^:]+:jar(?::[^:]+)?)$"
									select="\1" />
								<for list="${versions}" param="x">
									<sequential>
										<unzip src="${@{x}}" dest="${dependencyVersionsDir}">
											<patternset>
												<include name="META-INF/${project.groupId}.versions.properties" />
											</patternset>
										</unzip>
										<concat
											destfile="${project.build.outputDirectory}/META-INF/${project.groupId}.versions.properties"
											append="true">
											<path
												path="${dependencyVersionsDir}/META-INF/${project.groupId}.versions.properties" />
										</concat>
									</sequential>
								</for>
								<delete dir="${dependencyVersionsDir}" quiet="true" />
							</target>
						</configuration>
					</execution>

					<!-- Clean everything once finished so that IDE doesn't find the unpacked 
						files. -->
					<execution>
						<id>clean-source-directory</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete dir="${generatedSourceDir}" quiet="true" />
								<delete dir="${dependencyVersionsDir}" quiet="true" />
								<delete dir="${project.build.outputDirectory}" quiet="true" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Include the directory where the source files were unpacked -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${generatedSourceDir}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Disable OSGi bundle manifest generation -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-manifest</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<!-- Override the default JAR configuration -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${mvn.main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>all-in-one-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<index>true</index>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Disable animal sniffer -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Disable checkstyle -->
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>check-style</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Disable all plugin executions configured by jar packaging -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>compile</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>
	<url>http://www.site.net</url>
	<inceptionYear>2015</inceptionYear>
	<organization>
		<name>Nobody Nowhere</name>
		<url>http://www.site.net</url>
	</organization>
</project>